// <auto-generated />
using FreeSpinsGame.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FreeSpinsGame.Migrations
{
    [DbContext(typeof(SpinGameDbContext))]
    [Migration("20250730134138_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FreeSpinsGame.Domain.Entities.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxSpinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.HasKey("Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("FreeSpinsGame.Domain.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("FreeSpinsGame.Domain.Entities.PlayerCampaign", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentSpinCount")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "CampaignId");

                    b.HasIndex("CampaignId");

                    b.ToTable("PlayerCampaigns");
                });

            modelBuilder.Entity("FreeSpinsGame.Domain.Entities.PlayerCampaign", b =>
                {
                    b.HasOne("FreeSpinsGame.Domain.Entities.Campaign", "Campaign")
                        .WithMany("PlayerCampaigns")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FreeSpinsGame.Domain.Entities.Player", "Player")
                        .WithMany("PlayerCampaigns")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("FreeSpinsGame.Domain.Entities.Campaign", b =>
                {
                    b.Navigation("PlayerCampaigns");
                });

            modelBuilder.Entity("FreeSpinsGame.Domain.Entities.Player", b =>
                {
                    b.Navigation("PlayerCampaigns");
                });
#pragma warning restore 612, 618
        }
    }
}
